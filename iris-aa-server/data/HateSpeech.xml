<?xml version="1.0" encoding="UTF-8"?>
<Export generator="IRIS" version="26" zv="IRIS for Windows (x86-64) 2019.4.0ML (Build 176U)" ts="2020-01-29 15:25:04">
<Class name="NLP.HateSpeech">
<Super>%Persistent</Super>
<TimeChanged>65407,55491.800962</TimeChanged>
<TimeCreated>65407,46597.061384</TimeCreated>

<Property name="Comment">
<Type>%String</Type>
<Parameter name="MAXLEN"/>
</Property>

<Property name="FileName">
<Type>%String</Type>
</Property>

<Property name="UserId">
<Type>%String</Type>
</Property>

<Property name="SubforumId">
<Type>%String</Type>
</Property>

<Property name="ContextNeeded">
<Type>%Integer</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// training or test

]]></Content>
</UDLText>

<Property name="Sample">
<Type>%String</Type>
</Property>

<Property name="Label">
<Type>%String</Type>
</Property>

<Method name="Load">
<ClassMethod>1</ClassMethod>
<FormalSpec>pDir:%String="C:\Users\bdeboe\Documents\GitHub\hate-speech-dataset\"</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set tSC = $$$OK
	try {
		do ..%KillExtent()
		
		set tSeparator = $s($$$isWINDOWS:"\",1:"/")
		set tFile = ##class(%Stream.FileCharacter).%New()
		set tSC = tFile.LinkToFile(pDir_"annotations_metadata.csv")
		quit:$$$ISERR(tSC)
		
		do tFile.ReadLine() // skip header
		
		while 'tFile.AtEnd {
			set tLine = $zstrip(tFile.ReadLine(),"<>WC")
			set tRow = ..%New()
			set tRow.FileName = $piece(tLine,",",1)_".txt"
			set tRow.UserId = $piece(tLine,",",2)
			set tRow.SubforumId = $piece(tLine,",",3)
			set tRow.ContextNeeded = $piece(tLine,",",4)
			set tRow.Label = $piece(tLine,",",5)
			
			set tCommentFile = ##class(%Stream.FileCharacter).%New()
			set tSC = tCommentFile.LinkToFile(pDir_"all_files"_tSeparator_tRow.FileName)
			quit:$$$ISERR(tSC)
			set tRow.Comment = tCommentFile.Read()
			
			if ##class(%File).Exists(pDir_"sampled_train"_tSeparator_tRow.FileName) {
				set tRow.Sample = "train"
			} elseif ##class(%File).Exists(pDir_"sampled_test"_tSeparator_tRow.FileName) {
				set tRow.Sample = "test"
			}
			
			set tSC = tRow.%Save()
			quit:$$$ISERR(tSC)
		}
		
	} catch (ex) {
		set tSC = ex.AsStatus()
	}
	quit tSC
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^NLP.HateSpeechD</DataLocation>
<DefaultData>HateSpeechDefaultData</DefaultData>
<IdLocation>^NLP.HateSpeechD</IdLocation>
<IndexLocation>^NLP.HateSpeechI</IndexLocation>
<StreamLocation>^NLP.HateSpeechS</StreamLocation>
<Data name="HateSpeechDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Comment</Value>
</Value>
<Value name="3">
<Value>FileName</Value>
</Value>
<Value name="4">
<Value>UserId</Value>
</Value>
<Value name="5">
<Value>SubforumId</Value>
</Value>
<Value name="6">
<Value>ContextNeeded</Value>
</Value>
<Value name="7">
<Value>Label</Value>
</Value>
<Value name="8">
<Value>Sample</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
